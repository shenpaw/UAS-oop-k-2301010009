/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.sql.*;
import javax.swing.*;
import java.awt.*;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.table.DefaultTableModel;
import model.RupiahHelper;


/**
 *
 * @author ASUS
 */
public class DaftarTransaksi extends javax.swing.JFrame {

    /**
     * Creates new form DaftarTrandaksi
     */
    public DaftarTransaksi() {
        initComponents();
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        DaftarTransaksi_tabel = new javax.swing.JTable();
        DaftarTransaksi = new java.awt.Label();
        Edit_btn = new javax.swing.JButton();
        Tebus_btn = new javax.swing.JButton();
        Tambah_btn = new javax.swing.JButton();
        Hapus_btn = new javax.swing.JButton();
        Tutup_btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        DaftarTransaksi_tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nama", "Kontak", "Barang", "Pinjaman", "Jatuh Tempo", "Status", "Bunga", "Denda", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DaftarTransaksi_tabel.setFillsViewportHeight(true);
        jScrollPane2.setViewportView(DaftarTransaksi_tabel);
        if (DaftarTransaksi_tabel.getColumnModel().getColumnCount() > 0) {
            DaftarTransaksi_tabel.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 935, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 28, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel1);

        DaftarTransaksi.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        DaftarTransaksi.setText("Daftar Transaksi");

        Edit_btn.setText("Edit");
        Edit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Edit_btnActionPerformed(evt);
            }
        });

        Tebus_btn.setText("Tebus");
        Tebus_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tebus_btnActionPerformed(evt);
            }
        });

        Tambah_btn.setText("Tambah");
        Tambah_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tambah_btnActionPerformed(evt);
            }
        });

        Hapus_btn.setText("Hapus");
        Hapus_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hapus_btnActionPerformed(evt);
            }
        });

        Tutup_btn.setText("Tutup");
        Tutup_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tutup_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DaftarTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 936, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(Edit_btn)
                        .addGap(18, 18, 18)
                        .addComponent(Tebus_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Tambah_btn)
                        .addGap(18, 18, 18)
                        .addComponent(Hapus_btn)
                        .addGap(18, 18, 18)
                        .addComponent(Tutup_btn)))
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(DaftarTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Edit_btn)
                    .addComponent(Tebus_btn)
                    .addComponent(Tambah_btn)
                    .addComponent(Hapus_btn)
                    .addComponent(Tutup_btn))
                .addContainerGap())
        );

        DaftarTransaksi.getAccessibleContext().setAccessibleName("DaftarTrandaksi");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void loadData() {
        // Set kolom tabel (jika belum di-set sebelumnya)
        String[] kolom = {"ID", "Nama", "Kontak", "Barang", "Pinjaman", "Jatuh Tempo", "Status", "Bunga", "Denda", "Total"};
        DefaultTableModel model = new DefaultTableModel(kolom, 0); // baris awal = 0
        DaftarTransaksi_tabel.setModel(model); // sambungkan model ke tabel

        try (Connection conn = new controller.Koneksi().koneksi();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery("SELECT * FROM transaksi")) {

            while (rs.next()) {
                // Format nilai numerik jadi Rp...
                String formattedPinjaman = rs.getObject("jumlah_pinjaman") != null
                    ? RupiahHelper.format(rs.getDouble("jumlah_pinjaman"))
                    : "-";
                String formattedBunga = rs.getObject("bunga") != null
                    ? RupiahHelper.format(rs.getDouble("bunga"))
                    : "-";
                String formattedDenda = rs.getObject("denda") != null
                    ? RupiahHelper.format(rs.getDouble("denda"))
                    : "-";
                String formattedTotal = rs.getObject("total_tebusan") != null
                    ? RupiahHelper.format(rs.getDouble("total_tebusan"))
                    : "-";

                // Masukkan data ke satu baris
                Object[] row = {
                    rs.getInt("id"),
                    rs.getString("nama_penggadai"),
                    rs.getString("kontak"),
                    rs.getString("nama_barang"),
                    formattedPinjaman,
                    rs.getDate("jatuh_tempo"),
                    rs.getString("status"),
                    formattedBunga,
                    formattedDenda,
                    formattedTotal
                };

                model.addRow(row);
            }

            System.out.println(">> Data transaksi berhasil dimuat: " + model.getRowCount() + " baris.");

        } catch (Exception e) {
            e.printStackTrace(); // untuk debug di console
            JOptionPane.showMessageDialog(this, "Gagal memuat data: " + e.getMessage());
        }
        
    }

  
    private void Edit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Edit_btnActionPerformed
        int selectedRow = DaftarTransaksi_tabel.getSelectedRow();
        if (selectedRow != -1) {
            String status = DaftarTransaksi_tabel.getValueAt(selectedRow, 6).toString();
            if ("Digadaikan".equalsIgnoreCase(status)) {
                // TODO: Ambil data dari baris dan kirim ke FormInputTransaksi
                new FormInputTransaksi().setVisible(true);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Hanya transaksi dengan status 'Digadaikan' yang bisa diedit.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Pilih transaksi terlebih dahulu.");
        }
    }//GEN-LAST:event_Edit_btnActionPerformed

    private void Tebus_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tebus_btnActionPerformed
                                        
        int selectedRow = DaftarTransaksi_tabel.getSelectedRow();
        if (selectedRow != -1) {
            String status = DaftarTransaksi_tabel.getValueAt(selectedRow, 6).toString(); // kolom Status
            if ("Digadaikan".equalsIgnoreCase(status)) {
                try {
                    int id = (int) DaftarTransaksi_tabel.getValueAt(selectedRow, 0); // kolom ID
                    String nama = DaftarTransaksi_tabel.getValueAt(selectedRow, 1).toString(); // Nama
                    String kontak = DaftarTransaksi_tabel.getValueAt(selectedRow, 2).toString(); // Kontak
                    String barang = DaftarTransaksi_tabel.getValueAt(selectedRow, 3).toString(); // Barang
                    double pinjaman = model.RupiahHelper.parse(DaftarTransaksi_tabel.getValueAt(selectedRow, 4).toString()); // Pinjaman
                    String jatuhTempo = DaftarTransaksi_tabel.getValueAt(selectedRow, 5).toString(); // Jatuh Tempo

                    // Ambil tanggal_gadai dan keterangan langsung dari DB
                    String tglGadai = "";
                    String keterangan = "";
                    double denda = 0;
                    double total = 0;
                    try (Connection conn = new controller.Koneksi().koneksi();
                         PreparedStatement ps = conn.prepareStatement("SELECT tanggal_gadai, keterangan, denda, total_tebusan FROM transaksi WHERE id = ?")) {
                        ps.setInt(1, id);
                        ResultSet rs = ps.executeQuery();
                        if (rs.next()) {
                            tglGadai = rs.getString("tanggal_gadai");
                            keterangan = rs.getString("keterangan");
                            denda = rs.getObject("denda") != null ? rs.getDouble("denda") : 0;
                            total = rs.getObject("total_tebusan") != null ? rs.getDouble("total_tebusan") : 0;

                        }
                    }
                    

                    FormPenebusan form = new FormPenebusan();
                    form.setDataTransaksi(id, nama, barang, pinjaman, tglGadai, jatuhTempo, keterangan);


                    form.setVisible(true);
                    this.dispose();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Gagal membuka FormPenebusan: " + e.getMessage());
                }

            } else {
                JOptionPane.showMessageDialog(this, "Hanya transaksi dengan status 'Digadaikan' yang bisa ditebus.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Pilih transaksi terlebih dahulu.");
        }
    }//GEN-LAST:event_Tebus_btnActionPerformed

    private void Tambah_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tambah_btnActionPerformed
        new FormInputTransaksi().setVisible(true);
        this.dispose(); // Menutup halaman ini jika ingin langsung kembali setelah input
    }//GEN-LAST:event_Tambah_btnActionPerformed

    private void Hapus_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hapus_btnActionPerformed
        int row = DaftarTransaksi_tabel.getSelectedRow();
        if (row >= 0) {
            int konfirmasi = JOptionPane.showConfirmDialog(this, "Yakin ingin menghapus?", "Hapus Transaksi", JOptionPane.YES_NO_OPTION);
            if (konfirmasi == JOptionPane.YES_OPTION) {
                int id = (int) DaftarTransaksi_tabel.getValueAt(row, 0);
                try (Connection conn = new controller.Koneksi().koneksi();
                     PreparedStatement ps = conn.prepareStatement("DELETE FROM transaksi WHERE id = ?")) {
                    ps.setInt(1, id);
                    ps.executeUpdate();
                    loadData();
                    JOptionPane.showMessageDialog(this, "Transaksi dihapus.");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Gagal menghapus: " + e.getMessage());
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Pilih transaksi yang ingin dihapus.");
        }

    }//GEN-LAST:event_Hapus_btnActionPerformed

    private void Tutup_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tutup_btnActionPerformed
        this.dispose(); // Tutup form
    }//GEN-LAST:event_Tutup_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DaftarTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DaftarTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DaftarTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DaftarTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DaftarTransaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label DaftarTransaksi;
    private javax.swing.JTable DaftarTransaksi_tabel;
    private javax.swing.JButton Edit_btn;
    private javax.swing.JButton Hapus_btn;
    private javax.swing.JButton Tambah_btn;
    private javax.swing.JButton Tebus_btn;
    private javax.swing.JButton Tutup_btn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
